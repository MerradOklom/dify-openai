name: Release crate

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - "bugfix/**"

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  upload-artifact:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'rming'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')

      - name: RUSTFLAGS for Windows
        if: endsWith(matrix.target, 'windows-msvc')
        run: |
          echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"

      - uses: taiki-e/upload-rust-binary-action@v1
        id: upload-rust-binary-action
        with:
          bin: dify-openai-apis
          target: ${{ matrix.target }}
          tar: unix
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
          dry-run: true
      - uses: actions/upload-artifact@v4
        if: endsWith(matrix.target, 'windows-msvc')
        with:
          name: ${{ steps.upload-rust-binary-action.outputs.archive }}
          path: "${{ steps.upload-rust-binary-action.outputs.archive }}.zip"
      - uses: actions/upload-artifact@v4
        if: endsWith(matrix.target, 'windows-msvc') != true
        with:
          name: ${{ steps.upload-rust-binary-action.outputs.archive }}
          path: "${{ steps.upload-rust-binary-action.outputs.archive }}.*"
